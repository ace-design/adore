
fragment mustAuthenticate {
  variables { u as cmsEmployee; still as boolean; auth as boolean; }
  activities {
    a1. still :=  cms::isAuthentified(u);
    h. hook(u);
    a2. auth := cms::authUser(u);
    t. throw('BadAuthentification' as string);
  }
  relations {
    ^ < a1; a1 < h when still; h < $; a1 < a2 when ! still; 
    a2 < h when auth; a2 < t when ! auth;
  }
}


//noConflict('concurrentAccess', 'reHandleOnChange_a2','reHandleOnChange_t').
fragment reHandleOnChange<cxt,crisis> {
 variables {
   cxt as contextIdentifier; crisis as crisisIdentifier; mustWait as boolean; c as boolean;
  }
  activities {
    h. hook();
    a0. mustWait := id('false' as boolean);
    a1. msgBus::wait4msg('status' as string, 'change' as string, cxt);
    a2. mustWait := id('true' as boolean);
    t. c := isTrue(mustWait);
    a3. cms::handleACrisis(crisis);
    a4. nop();
  }
  relations { 
    ^ < h; h << t; t < $ when !c; ^< a0; 
    a0 < a1; a1 < a2; a2 << t; a1 < a3; a3 < a4; t < a4 when c; a4 < $;
  }
}

