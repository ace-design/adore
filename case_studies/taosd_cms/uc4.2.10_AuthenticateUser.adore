// UC 4.2.10 AuthenticateUser
orchestration cms::authUser {
  variables {
    user as cmsEmployee;
    log as string; pwd as string; 
    isValid as boolean;
  }
  activities {
    a0. user := receive();
    a1a2. (log, pwd) := ui::promptPass(user);
    a3. isValid := cms::checkPass(user,log,pwd);
    a4. reply(isValid);
  }
  relations { a0 < a1a2; a1a2 < a3; a3 < a4; }
}

// Extension 2a: authentication process cancelled
fragment cancelAuth {
  variables { }
  activities {
    h. hook();
    r. reply('false' as boolean);
  }
  relations { ^ < h; fail(h,'cancel') < r; h < $; }
}

// Extension 3a: allow 3 try for authentification
fragment only3times {
  variables { 
    user as cmsEmployee; n as integer;
    c as boolean; v as boolean; r as boolean;
  }
  activities {
    e1. n := cms::incrAuthCpt(user);
    t. c := isLesserThan(n,'3' as string);
    e2. throw('TooManyLoginAttempts' as string);
    h. v := hook(user) ;
    e3. r := self::self(user);
    e4. reply(r);
  }
  relations {
    ^ < e1; e1 < t; 
    t < h when c; t < e2 when ! c;
    h < $ when v; h < e3 when ! v;
    e3 < e4;
  } 
}

// building the global process
composition cms::authUser {
  apply cancelAuth => a1a2 ;
  apply only3times => {a1a2,a3} ;
}
