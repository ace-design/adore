
/*

//estce normal de passer au suivant sans attendre le signal au niveau du bus?
@mi: oui, effectivement, c'est bizarre. Mais dans ce cas, ce n'est plus en //
du hook. On sait le faire, exclusivité des conditions sur le hook, et ca roule.

//sacrement inversé... on lui demande s'il envoie des choses correctes.. pas grave
@mi: le CdC dit 'l'ERS approuve partiellement la requête'. Je traduit ça en
lui posant une question sur son 'état', et en en deduisant si la 
ressource est degradée ou pas. C'est effectivmeent déviant rapport au CdC ...
et merde.


//

composition cms::requestExtRes {
  apply degradedRes(treshold: '80') => a2; // Ext 2a.
  apply noExtRes                    => a2; // Ext 2b.
}

 */
orchestration cms::requestExtRes {
  variables {
    res as resource; w as worker;
    m as mission; 
    cx as ersConnexion;

   dR_deg as boolean; 
    dR_lvl as integer; 
  }
  activities {
    rcv. (res,m) := receive();
    a1. cx := ers::submitMissionDetails(m);
    a2. w := ers::providesWorker(cx,res);
    rpl. reply(w);

    dR_a1. dR_lvl := ers::getLoadLevel(cx);
    dR_t. dR_deg := isGreaterThan(dR_lvl,'80' as integer);
    dR_a2. msgBus::send('info' as string, 'degraded' as string,w);

    nER_a1. msgBus::send('info' as string, 'noSuchResource' as string,res);
    nER_thr. throw('unavailable' as string);
  }
  relations { rcv < a1; a1 < a2; //a2 < rpl; 

    a2 < dR_a1; dR_a1 < dR_t; dR_t < dR_a2 when dR_deg;  
    dR_t < rpl when ! dR_deg;  dR_a2<rpl;

    fail(a2,'noResource') < nER_a1; nER_a1 < nER_thr; 
}
}
