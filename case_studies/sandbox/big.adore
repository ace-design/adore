
orchestration test::test {
  variables {
    c as boolean; d as boolean;
  }
  activities {
    a1. receive();
    a2. nop();
    a3. c := nop();
    a4. nop();
    a5. nop();
    a6. nop();
    a7. nop();
    a8. nop();
    a9. reply();
    a10. nop();
    a11. nop();
    a12. nop();
    a13. nop();
    a14. nop();
    a15. nop();
/*    aa. d := nop();
    aa1. nop();
    aa2. nop(); */
  }
  relations {
    a1 < a2; a2 < a4; a4 < a7; a7 < a9; a1 < a3; a1 < a14; a14 < a4; 
    a3 < a5 when c; a5 < a11; a11 < a7;
    a3 < a6 when !c; a6 < a12; a6 < a13; a12 < a7; a13 < a7;
    fail(a1,'f') < a8; a8 < a10; a10 < a9; a8 < a15; a15 < a9;
    // Mireille:
    //a1 < aa; aa < aa1 when d; aa < aa2 when !d; aa1 < a11; aa2 < a11; 
    //aa1 < a13; aa2 < a12;
  }
}
