/** CCCMS System, implemented as orchestrations of web services
 ** @author: Sebastien Mosser
 ** @date:   Sat Jun  5, 2010  5:39 PM
 **/

require 'orchestration.adore';
require 'ext1.adore';
require 'ext2.adore';

/************************
 ** Second Composition **
 ************************/

composition cms::captureWitnessReport {
  apply callDisconnected => a10;
  apply callDisconnected => a2;
  apply ignoreDisconnection => a4;
  apply fakeWitnessInfo => a2a3;
  apply fakeCrisisDetected => a4;
}


/*%
  doClone(ignoreDisconnection, iD1), doClone(fakeCrisisDetected,fCD1),
  doMerge([iD1, fCD1],iD_fCD), doClone(iD_fCD, iD_fCD1)
%*/

/*%
  doClone(callDisconnected, cD1), doClone(callDisconnected, cD2),
  doClone(fakeWitnessInfo, fWI1),
  doWeave([ weave(cD1,  [cms_captureWitnessReport_a10]),
            weave(cD2,  [cms_captureWitnessReport_a2]),
	    weave(iD1_fCD1,  [cms_captureWitnessReport_a4]),
	    weave(fWI1, [cms_captureWitnessReport_a2a3])]),
  doProcessSimplification(cms_captureWitnessReport)
%*/

/***********************
 ** First Composition **
 ***********************/

/*
composition cms::captureWitnessReport {
  apply callDisconnected => a10;
  apply callDisconnected => a2;
  apply ignoreDisconnection => a4;
  apply fakeWitnessInfo => a2a3;
} */

/*
  doClone(callDisconnected, cD1), doClone(callDisconnected, cD2),
  doClone(ignoreDisconnection, iD1), doClone(fakeWitnessInfo, fWI1),
  doWeave([ weave(cD1,  [cms_captureWitnessReport_a10]),
            weave(cD2,  [cms_captureWitnessReport_a2]),
	    weave(iD1,  [cms_captureWitnessReport_a4]),
	    weave(fWI1, [cms_captureWitnessReport_a2a3])]),
  doProcessSimplification(cms_captureWitnessReport)
*/

