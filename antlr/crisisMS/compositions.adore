require 'fragments.adore' ;
require 'CMS-V1.adore';

//
//To build the initial scenario
//1)
composition    { 
  toSet cms::resolve::selectedMission;
  toSet  cms::dealWithOneMission::internalRessource;
  toSet  cms::dealWithOneMission::externalRessource;
}



//From scenario 4.2.1 : 12. Coordinator receives new information about the crisis from System.

composition  cms::setNewCrisisInformation  { 
 apply notify(observer: 'coordinatorSystem', what :'newInfo', who :'i') => a0;
}



//???? : je n'ai pas fait ca.....
//from 4.2.2
//5a. PhoneCompany information does not match information received from Witness.
//5a.1 The base use case is terminated. 

composition   { 
  apply halt (error : 'infoDoesNotMatch') => cms::witnessReportCapture::a2a3;
  apply stop (error : 'infoDoesNotMatch') => cms::resolve::a1;
}

//from 4.2.2
//1a,2a. The call is disconnected. The base use case terminates. 
composition  cms::witnessReportCapture { 
  apply unreachable(deadline : '10') =>  a1;
  apply unreachable(deadline : '10') => a2;
}


//In parallel to steps 3-4, if the crisis location is covered by camera surveillance: 
//3a.1 System requests video feed from SurveillanceSystem. 
//3a.2 SurveillanceSystem starts sending video feed to System. 
//3a.3 System starts displaying video feed for Coordinator. 
//WARNING : comment ca marche avec le cas ou on ne peut pas valider les infos???
// a priori on a un pbme... 
// je pense que on se moque dans ce cas de demander la validation a la compagnie de tel ou du moins ca ne doit pas interrompre le scenario...
//J'ai besoin de visualiser
//++++++++++++
//5b. Camera vision of the location is perfect, but Coordinator cannot conﬁrm the situation that the witness describes or the Coordinator determines that the witness is calling in a fake crisis. 
//5b.1 The base use case is terminated. 
//WARNING: approche basique... que se passe-t-il en composant tout ca....
//Warning : pensez a ajouter la relation sur receive.
//Warning traiter l'erreur au niveau de resolve?
composition  cms::witnessReportCapture { 
  apply requestVideoSurveillance =>  a2;
  apply onRequestVideoSurveillanceCheckForFakeCrisis 
  =>  a5;
}

//from 4.2.2
//4a. The call is disconnected. 
//4a.1 Use case continues at step 5 without crisis information. 
//WARNING : visualiser comment tout cela s'imbrique
//BIZARRE.... pas tres coherent....
//Solution: detecter des conflits et faciliter l'ecriture de la solution...
composition  cms::witnessReportCapture { 
  apply unreachableButContinue(deadline : '10') => a4;
}

//From 4.2.2
//5a. PhoneCompany information does not match information received from Witness.
//5a.1 The base use case is terminated. 

composition  cms::witnessReportCapture { 
  apply phoneCompanyInfoDoesntmatch => a2a12;
}

//from 4.2.1
//1a. Coordinator is not logged in. 
//1a.1 Coordinator authenticates with System (UC 10). 
//1a.2 Use case continues with step 1. 
composition cms::resolve { 
 apply log => a1;

 }

//4a. Internal resource is not available after step 4. 
//4a.1 System requests an external resource instead (i.e., use case continues in parallel with step 5). 
composition cms::dealWithOneMission { 
 apply ressourceAvailability (ressource : 'internalRessource' , mission :'selectedMission' ) => a4a2;


 }

//5a. External resource is not available after step 5. 
//5a.1 Use case continues in parallel with step 2. 
composition cms::dealWithOneMission { 
 apply ressourceAvailabilityDegrated (ressource : 'externalRessource') =>  a5a2;
 }


//6a. System determines that the crisis location is unreachable by standard transportation means, but reachable by helicopter. 
//6a.1 System informs the Coordinator about the problem. 
//6a.2 Coordinator instructs System to execute a helicopter transport mission (UC 09). 
//6a.3 Use case continues with step 6. 


//from 4.2.3
//1a. CMSEmployee is not logged in. 
//1a.1 System requests the CMSEmployee to login. 
//1a.2 CMSEmployee authenticates with System (UC 10). 
//1a.3 Use case continues at step 1. 
composition cms::assignInternalResource { 
 apply log (authenticationService : 'authentification100',logger : 'cmsEmployee') => a2;
 }





//From 4.2.3 Assign Internal Resource
//1b. CMSEmployee is unavailable or unresponsive.
//1b.1 System selects the next appropriate CMSEmployee.
//1b.2 Use case continues at step 1.
//1b.1a No other CMSEmployee is available. Use case ends in failure.
//Warning : catch et throw on the same activity


composition cms::assignInternalResource { 
 apply unreachable => a2; 
 apply unavailable(employee : 'cmsEmployee') => a2;
 }

//From 4.2.6
//composition superObserver::executeMission { 
  // toset  mission; 
  //apply notify (observer : 'superObserver', what : 'MissionCreated', who : 'mission') => a7;
  //apply notify (observer : 'superObserver', what : 'endMission', who : 'mission') => a8;
// }


//From 4.2.1
//9. In parallel to steps 6-8, Coordinator receives updates on the mission status from System.
composition cms::manageRessource {  
 apply notify (observer : 'coordinatorSystem', what : 'Ressource arrived', 
who : 'r') => a2;
 apply notify (observer : 'coordinatorSystem', what : 'Ressource is finished', 
who : 'r') => a11;
 }

//From 4.2.1
//12. In parallel to steps 4-8, Coordinator receives new information about the crisis from System.

composition cms::setNewCrisisInformation {  
 apply notify (observer : 'coordinatorSystem', what : 'newInfo', 
who : 'i') => a0;
 }



//For dealing with ressources

composition workerSystem::executeMission {  
 apply notify (observer : 'ressourceManager', what : 'leaving', 
who : 'workerSystem') => a5;
 apply notify (observer : 'ressourceManager', what : 'dropping', 
who : 'workerSystem') => a6;
 apply notify (observer : 'ressourceManager', what : 'finish', 
who : 'workerSystem') => a7;
 }


//from 4.2.7
//4a. HospitalResourceSystem transmits victim’s medical history information to System.
//4a.1 System notifies FirstAidWorker of medical history of the victim relevant to his injury.
//4a.2 Use case continues at step 4.
//Perso : I don't introduce waiting before to choose the hospital because it's not asked.


composition workerSystem::executeMission {  
 apply medicalHistoryAvailable => a3;
 }




//6a. System determines that the crisis location is unreachable by standard transportation means, but reachable by helicopter.
//6a.1 System informs the Coordinator about the problem.
//6a.2 Coordinator instructs System to execute a helicopter transport mission (UC 09).
composition  cms::setNewCrisisInformation {  
 apply reachableByHelicopter => a0;
 } 
